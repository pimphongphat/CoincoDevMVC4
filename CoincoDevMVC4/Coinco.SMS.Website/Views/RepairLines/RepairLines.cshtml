@model Coinco.SMS.Website.Models.RepairType
@using Telerik.Web.Mvc.UI
@using Telerik.Web.Mvc
@{
    ViewBag.Title = "RepairLines";
}

<div class="pageCointainerRL">
    <div class="addLinesDivRL">
     <div class="addLineleftcolumnRL">
     <h6>Identification</h6>
     <br />
        <label>Service Order:</label>
               @Html.DisplayFor(x => TempData["ServiceOrderId"] )
         <br />
         <label> Serial Number:</label>
               @{Html.Telerik().ComboBox().Name("serialNumberList")
                     .BindTo((SelectList)ViewData["SerialNumberList"])
                 .HtmlAttributes(new { style = "font-size: 8pt; font-family: Calibri; width=50px;" })
                 .DropDownHtmlAttributes(new { style = "font-size: 8pt; font-family: Calibri;" })
                 .Render();
                }
            <br />
         <label>Part Number:</label>
              @* @Html.DisplayFor(x => TempData["ServiceOrderId"])*@
         <br />
     </div>
     <div class="addLinecentercolumnRL">
      <h6>Symptom</h6>
      <br />
            <label>Condition:</label>
                  @{Html.Telerik().ComboBox().Name("conditionList")
                        .BindTo((SelectList)ViewData["Condition"])
                        .Placeholder("--select--")
                 .HtmlAttributes(new { style = "font-size: 8pt; font-family: Calibri; width=50px;" })
                 .DropDownHtmlAttributes(new { style = "font-size: 8pt; font-family: Calibri;" })
                 .Render();
                    }
            <br />
            <label>Symptom Area:</label>
                 @{Html.Telerik().ComboBox().Name("symptomAreaList")
                       .BindTo((SelectList)ViewData["SymptomArea"])
                       .Placeholder("--select--")
                 .HtmlAttributes(new { style = "font-size: 8pt; font-family: Calibri; width=50px;" })
                 .DropDownHtmlAttributes(new { style = "font-size: 8pt; font-family: Calibri;" })
                 .CascadeTo("symptomCodeList")
                 //.ClientEvents(events => events.OnChange("SymptomArea"))
                 .Render();
                    }
            <br />
            <label>Symptom Code:</label>
             @{Html.Telerik().ComboBox().Name("symptomCodeList")
                 .DataBinding(binding => binding.Ajax().Select("_GetDropDownSymptomCode", "RepairLines"))
                   .Placeholder("--select--")
                 .HtmlAttributes(new { style = "font-size: 8pt; font-family: Calibri; width=50px;" })
                 .DropDownHtmlAttributes(new { style = "font-size: 8pt; font-family: Calibri;" })
                 .Render();
                    }
            <br />
     </div>
     <div class="addLineRightcolumnRL">
     <h6>Execution</h6>
     <br />
            <label>Repair Stage:</label>
               @{Html.Telerik().ComboBox().Name("repairStageList")
                     .BindTo((SelectList)ViewData["RepairStage"])
                     .Placeholder("--select--")
                 .HtmlAttributes(new { style = "font-size: 8pt; font-family: Calibri; width=50px;" })
                 .DropDownHtmlAttributes(new { style = "font-size: 8pt; font-family: Calibri;" })
                 .Render();
                    }
            <br />
       
            <label>Technician:</label>
               @{Html.Telerik().ComboBox().Name("technicianList")
                     .BindTo((SelectList)ViewData["ServiceTechnicianList"])
                     .Placeholder("--select--")
                 .HtmlAttributes(new { style = "font-size: 8pt; font-family: Calibri; width=50px;" })
                 .DropDownHtmlAttributes(new { style = "font-size: 8pt; font-family: Calibri;" })
                 .Render();
                    }
            <br />
             
            <label>Comments:</label>
                @*@Html.TextAreaFor(x => x.ServiceComments)*@
            <br />
     </div>
    </div>

    <div class="addLinesDivRL">
     <div class="addLineleftcolumnRL">
     <br />
     <h6>Description</h6>
     <br />
        <label>Description:</label>
               @* @Html.TextAreaFor(x => x.ServiceComments)*@
         <br />
     </div>
     <div class="addLinecentercolumnRL">
     <br />
      <h6>Diagnosis</h6>
      <br />
            <label>Diagnosis Area:</label>
                  @{Html.Telerik().ComboBox().Name("diagnosisAreaList")
                       .BindTo((SelectList)ViewData["DiagnosisArea"])
                       .Placeholder("--select--") 
                 .HtmlAttributes(new { style = "font-size: 8pt; font-family: Calibri; width=50px;" })
                 .DropDownHtmlAttributes(new { style = "font-size: 8pt; font-family: Calibri;" })
                 .CascadeTo("diagnosisCodeList")
                 .Render();
                    }
            <br />
            <label>Diagnosis Code:</label>
                 @{Html.Telerik().ComboBox().Name("diagnosisCodeList")
                       .DataBinding(binding => binding.Ajax().Select("_GetDropDownDiagnosisCode", "RepairLines"))
                       .Placeholder("--select--")
                 .HtmlAttributes(new { style = "font-size: 8pt; font-family: Calibri; width=50px;" })
                 .DropDownHtmlAttributes(new { style = "font-size: 8pt; font-family: Calibri;" })
                 .Render();
                    }
            <br />
            <label>Resolution:</label>
               @{Html.Telerik().ComboBox().Name("resolutionList")
                     .BindTo((SelectList)ViewData["Resolution"])
                     .Placeholder("--select--")
                 .HtmlAttributes(new { style = "font-size: 8pt; font-family: Calibri; width=50px;" })
                 .DropDownHtmlAttributes(new { style = "font-size: 8pt; font-family: Calibri;" })
                 .Render();
                    }
            <br />
     </div>
    </div>
  <br />
  <br />
  <br />
  <br />
  <br />

    <div class="centercolumnSubmitRL">
        <button class="t-button" type="button">Add</button>
        <button class="t-button" type="button">Clear</button>
    </div>
   
</div>

@*<div class="partLinesDiv">
@{Html.Telerik().Grid((IEnumerable<Coinco.SMS.Website.Models.SerivceOrderPartLine>)ViewData["ServiceOrder"])
        .Name("PartLinesGrid")
        .Columns(columns =>
        {
            columns.Bound(c => c.ServiceObjectRelation).Title("SO Relation").Width(100);
            columns.Bound(c => c.TransactionType).Title("Description").Width(120);
            columns.Bound(c => c.Description).Title("Condition").Width(100);
            columns.Bound(c => c.SpecialtyCode.SpecialityCodeNo).Title("Symptom Area").Width(100);
            columns.Bound(c => c.FailureCode.FailureCodeNo).Title("Symptom Code").Width(100);
            columns.Bound(c => c.LineProperty.LinePropertyCode).Title("Diagnosis Area").Width(100);
            columns.Bound(c => c.Quantity).Title("Diagnosis Code").Width(100);
            columns.Bound(c => c.ServiceTechnician.ServiceTechnicianName).Title("Resolution").Width(100);
            columns.Bound(c => c.ServiceComments).Title("Repair Stage").Width(100);
        })

        .DataBinding(dataBinding =>
          {
              dataBinding.Ajax().OperationMode(GridOperationMode.Client).Select("_SelectionClientSide_ServiceOrders", "PartLinesGrid")
                  .Enabled(true);
          }
      )
        .HtmlAttributes(new { style = "font-size: 8pt; font-family: Verdana; width:950px" })
        .Scrollable()
        .Pageable((pager => pager.PageSize(5)))
        .Sortable()
        .Selectable()
        .Filterable()
        .Render();
        
        //.ClientEvents(clientEvents => clientEvents.OnDataBinding("onServiceGridDataBinding"))
        //.ClientEvents(events => events.OnRowSelect("onRowSelected"))

       
    
        }
  </div> *@
<script type="text/javascript">
    function onSymptomAreaListChange(e) {
        if (e != null) {
            var symptomArea = e.currentTarget.value;
            jQuery.ajax({
                url: "/RepairLines/GetSymptomCode",
                type: 'GET',
                data: { symptomArea: symptomArea },
                success: function (result) {
                    jQuery('#symptomCodeList').html(result);
                },
                error: function (result) {
                    alert(result.responseText);
                }

            });


            return false;
        }
    }
</script>