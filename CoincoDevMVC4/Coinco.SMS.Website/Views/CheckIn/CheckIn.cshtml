@using Telerik.Web.Mvc
@model Coinco.SMS.Website.Models.Address

@{
    ViewBag.Title = "CheckIn";
}

<div id="ServiceOrderAdditionDiv">
<div id="ServiceOrderDetailsDiv">
    <div id="Identification">
    <h6>Identification</h6>
        <div id="IdentificationDetails" class="fullViewforSmallerHeightClass">
    <div id="CustomerAccount" class="leftViewClass"> 
        <div id="CustomerAccountLabel" class="leftView" >
            @Html.Label("Customer Account", new { @class = "leftView" } )
        </div>
        <div id="CustomerAccountDropDown" class="leftadjacentView">          
               @Html.DropDownList("customerAccountDropDownList", (SelectList)ViewData["CustomerList"], "<--Select One-->", new { @class = "leftadjacentView" })
            
            

        </div>
    </div>
    </div>
    <br />
    <div id="Address" class="fullViewforLargerHeightClass">

        GetCustomerAddress();
    </div>
    </div>
    <h6>Other Details</h6>
    <div id="OtherDetails" class="fullViewforMediumHeightClass">
    <div id="CustomerComments" class="leftViewClass"> 
        <div id="CustomerCommentLabel" class="leftView" >
            @Html.Label("Customer Comments", new { @class = "leftView" })
        </div>
        <div id="CustomerCommentTextBox" class="leftadjacentView">
  
            @Html.TextArea("customerCommentTextArea", "", new { @class = "textAreaProperties" }) 

        </div>
    </div>

    <div id="CustomerPO" class="rightViewClass"> 
        <div id="CustomerPOLabel" class="rightView" >
            @Html.Label("Customer PO", new { @class = "rightView" })
        </div>
        <div id="CustomerPOTextBox" class="rightadjacentView">
  
                 @Html.TextBox("customerPOTextBox", "", new { @class = "textBoxProperties" }) 

        </div>
    </div>
    <br />
        <div id="ServiceTechnician" class="rightViewClass"> 
        <div id="ServiceTechnicianLabel" class="rightView" >
            @Html.Label("Service Technician", new { @class = "rightView" })
        </div>
        <div id="ServiceTechnicianDropDown" class="rightadjacentView">
  
                 @{
                     Html.Telerik().ComboBox().Name("serviceTechnicianDropDownList")
                     .BindTo((SelectList)ViewData["ServiceTechnicianList"])
                     .HtmlAttributes(new { @class = "rightadjacentView" })
                     .Render();
            }

        </div>
    </div>
    </div>
    <div id="WOClassificationDetails" class="fullViewforSmallerHeightClass">
     <div id="WOClassification" class="leftViewClass"> 
        <div id="WOClassificationLabel" class="leftView" >
            @Html.Label("WO Classification", new { @class = "leftView" })
        </div>
        <div id="WOClassificationDropDown" class="leftadjacentView">
             @{
                 Html.Telerik().ComboBox().Name("woClassificationDropDownList")
                     .BindTo((SelectList)ViewData["WOClassificationList"])
                     .HtmlAttributes(new { @class = "leftadjacentView" })
                     .Render();
            }
        </div>
    </div>

      <div id="ServiceResponsible" class="rightViewClass"> 
        <div id="ServiceResponsibleLabel" class="rightView" >
            @Html.Label("Service Responsible", new { @class = "rightView" })
        </div>
        <div id="ServiceResponsibleDropDown" class="rightadjacentView">
  
                 @{
                     Html.Telerik().ComboBox().Name("serviceResponsibleDropDownList")
                     .BindTo((SelectList)ViewData["ServiceResponsibleList"])
                     .HtmlAttributes(new { @class = "rightadjacentView" })
                     .Render();
            }

        </div>
    </div>
    
    </div>
            <h6>Check In Data</h6>
        <div id="CheckInData" class="fullViewThreeColumnforSmallerHeightClass">
     <div id="SerialNumber" class="leftViewClass"> 
        <div id="SerialNumberLabel" class="leftView" >
            @Html.Label("Serial Number", new { @class = "leftView" })
        </div>
        <div id="SerialNumberTextBox" class="leftadjacentView">
             @{
                 @Html.TextBox("serialNumberTextBox", "", new { @class = "textBoxProperties" }) 
            }
        </div>
    </div>

       <div id="PartNumber" class="rightViewClassforThirdColumn"> 
        <div id="PartNumberLabel" class="rightView" >
            @Html.Label("Part Number", new { @class = "rightView" })
        </div>
        <div id="PartNumberDropDown" class="rightadjacentView">
  
                 @{
                     Html.Telerik().ComboBox().Name("partNumberDropDownList")
                     .BindTo((SelectList)ViewData["PartNumberList"])
                     .HtmlAttributes(new { @class = "rightadjacentView" })
                     .Render();
            }
             
        </div>
         <div id="AddButton" class="rightViewforThirdColumn" >
                    <button class="t-button" type="button" value="Add">Add</button>

        </div>
    </div>
    </div>
  </div> 
  <br />
<div id="ServiceOrderGridDiv">
@{Html.Telerik().Grid((IEnumerable<Coinco.SMS.Website.Models.ServiceOrderLine>)ViewData["ServiceOrder"])
        .Name("ServiceOrderLineGrid")
        .Columns(columns =>
        {
            columns.Template(c => @Html.ActionLink("WorkOrder", "ServiceOrderHistory", new { id = c.SerialNumber })).Width(50).Title("History").Width(120);
            columns.Bound(c => c.SerialNumber).Title("Serial Number").Width(130);
            columns.Bound(c => c.PartNumber).Title("Part Number").Width(120);
            columns.Bound(c => c.PartType).Title("Part Type").Width(100);
            columns.Bound(c => c.Quantity).Title("Quantity").Width(100);
            columns.Bound(c => c.RepairType).Title("Repair Type").Width(120);
            columns.Bound(c => c.Warranty).Title("Warranty").Width(100);
            columns.Bound(c => c.Comments).Title("Comments").Width(100).Format("{0:dd/MM/yyyy}");
        })

        .DataBinding(dataBinding =>
        {
            dataBinding.Ajax().OperationMode(GridOperationMode.Client).Select("_SelectionClientSide_ServiceOrderLines", "CheckIn")
                .Enabled(true);
        }
        )
        .HtmlAttributes(new { style = "font-size: 8pt; font-family: Verdana;" })
        .Scrollable()
        .Pageable((pager => pager.PageSize(10)))
        .Sortable()
        .Selectable()
        .Filterable()
       .Render();
    
        }
        
  </div> 

  </div>

  <script type="text/javascript">
      jQuery('#customerAccountDropDownList').change(function () {
          var customerAccount = $(this).val();
          jQuery.ajax({
              url: "/CheckIn/GetCustomerAddresses",
              type: 'GET',
              data: { customerAccount: customerAccount },
              success: function (result) {
                  jQuery('#Address').html(result);
              },
              error: function (result) {
                  alert(result.responseText);
              }

          });
          return false;
      });

      
          jQuery(function GetCustomerAddress(e) {

              var customerAccount = null;
              //var dropDownList = $('#customerAccountDropDownList').data('tDropDownList');
              jQuery.ajax({
                  url: "/CheckIn/GetCustomerAddresses",
                  type: 'GET',
                  data: { customerAccount: customerAccount },
                  success: function (result) {
                      jQuery('#Address').html(result);
                  },
                  error: function (result) {
                      alert(result.responseText);
                  }

              });
              return false;
          });

      function onDataBinding(e) {
          var dropDownList = jQuery('#customerAccountDropDownList').data('DropDownList');
          var customerAccount = dropDownList.value();
          e.data = jQuery.extend(e.data, { customerAccount: customerAccount });
      }

     
      
</script>