@using Telerik.Web.Mvc
@model Coinco.SMS.Website.Models.ServiceOrder

@{
    ViewBag.Title = "CheckIn";
}
@using (Html.BeginForm())
{
<div id="ServiceOrderAdditionDiv">
    <div id="ServiceOrderDetailsDiv">
        <div id="Identification">
                      <label class="labelHeadingClass">Identification</label>

            <div id="IdentificationDetails" class="fullViewforSmallerHeightClass">
                <div id="CustomerAccount" class="leftViewClass"> 
                    <div id="CustomerAccountLabel" class="leftView" >
                        @Html.Label("Customer Account", new { @class = "leftView" })
                    </div>
                    <div id="CustomerAccountDropDown" class="leftadjacentView">                  
                        @{
    Html.Telerik().ComboBox().Name("customerAccountDropDownList")
        .BindTo((SelectList)Model.Customer.CustomerList)
        .Placeholder("<--SELECT-->")
        .ClientEvents(e => e.OnChange("onCustomerAccountDropDownListChange"))
        .HtmlAttributes(new { @class="dropDownProperties" })
        .DropDownHtmlAttributes(new { @class = "dropDownProperties" })
        .SelectedIndex(0)
        .Render();
                                }
           
                    </div>
                </div>
            </div>
        </div>
        
        <div id="OtherDetailsView" class="combinedViewForOtherDetailsCheckInDataClass" >
                <div id="Address" class="fullViewforLargerHeightClass">  
    <div id="BillingAddress" class="leftAddressViewClass">
        @{Html.Telerik().Grid((IEnumerable<Coinco.SMS.Website.Models.Address>)Model.BillingAddressList)
                .Name("BillingAddressGrid")
                .Columns(columns =>
                {
                    columns.Bound(c => c.AddressDetails).Title("Billing Address").Width(180);
                })
                        .DataBinding(dataBinding =>
                        {
                            dataBinding.Ajax().OperationMode(GridOperationMode.Client).Select("_GetCustomerAddresses", "CheckIn")
                                .Enabled(true);
                        }
                )
                         .Scrollable(c => c.Height("130px"))
                .Footer(false)
                .HtmlAttributes(new { style = "font-size: 8pt; font-family: Verdana;" })
               .Render();
    
                }
    </div>

    <div id="ShippingAddress" class="rightAddressViewClass">
         @{
    Html.Telerik().Grid(Model.ShippingAddressList.AsEnumerable<Coinco.SMS.Website.Models.Address>())
        .Name("ShippingAddressGrid")
        .Columns(columns =>
        {
            columns.Template(@<text>


                    <input name="checkedRecords" type="checkbox" checked="@item.IsSelected" value="@item.AddressId" title="checkedRecords" style="text-align:center"          
                     />
                </text>)
                   .ClientTemplate("<input type='checkbox' name='checkedRecords' value='<#= AddressId #>' checked='<#= IsSelected #>' />")
                   .Title("")
                   .Width(30)
                   .HtmlAttributes(new { style = "text-align:center" });

            columns.Bound(c => c.AddressDetails).Title("Shipping Address");
        })
                        .DataBinding(dataBinding =>
                        {
                            dataBinding.Ajax().OperationMode(GridOperationMode.Client).Select("_GetCustomerAddresses", "CheckIn")
                                                            .Enabled(true);
                            
                        }
        )
        
        .ClientEvents(events => events.OnRowDataBound("onLoad")
                                      .OnDataBound("onDataBound"))
        .Footer(false)
        .Selectable()
        .Scrollable(c => c.Height("130px"))
        .HtmlAttributes(new { style = "font-size: 8pt; font-family: Verdana;" })      
        .Render();
        
        }
    </div>
</div>
                      <label class="labelHeadingClass">Other Details</label>


<div id="OtherDetails" class="fullViewforMediumHeightClass">

    <div id="CustomerComments" class="leftViewClass"> 
        <div id="CustomerCommentLabel" class="leftView" >
            @Html.Label("Customer Comments", new { @class = "leftView" })
        </div>

        <div id="CustomerCommentTextBox" class="leftadjacentView">
            @Html.TextAreaFor(p => p.Comments, new { @class = "textAreaProperties", id = "customerCommentTextArea" }) 
         </div>
    </div>

    <div id="CustomerPO" class="rightViewClass"> 
        <div id="CustomerPOLabel" class="rightView" >
            @Html.Label("Customer PO", new { @class = "rightView" })
        </div>

        <div id="CustomerPOTextBox" class="rightadjacentView">
            @Html.TextBoxFor(p => p.CustomerPO, new { @class = "textBoxProperties", id = "customerPOTextBox" }) 
        </div>
    </div>

    <div id="ServiceTechnician" class="rightViewClass"> 
        <div id="ServiceTechnicianLabel" class="rightView" >
            @Html.Label("Service Technician", new { @class = "rightView" })
        </div>

        <div id="ServiceTechnicianDropDown" class="rightadjacentView">
            @{
                Html.Telerik().ComboBox().Name("serviceTechnicianDropDownList")
                .BindTo((SelectList)Model.ServiceTechnician.ServiceTechnicianList)
                .Placeholder("<--SELECT-->")
                .HtmlAttributes(new { @class = "dropDownProperties" })
                .DropDownHtmlAttributes(new { @class = "dropDownProperties" })
                .SelectedIndex(0)
                .Render();
            }
        </div>
    </div>

    <div id="WOClassification" class="leftViewClass"> 
        <div id="WOClassificationLabel" class="leftView" >
            @Html.Label("WO Classification", new { @class = "leftView" })
        </div>

        <div id="WOClassificationDropDown" class="leftadjacentView">
            @{
                Html.Telerik().ComboBox().Name("woClassificationDropDownList")
                .BindTo((SelectList)Model.WOClassification.WOClassificationList)
                .Placeholder("<--SELECT-->")
                .HtmlAttributes(new { @class = "dropDownProperties" })
                .DropDownHtmlAttributes(new { @class = "dropDownProperties" })
                .SelectedIndex(0)
                .Render();
            }
        </div>
    </div>

    <div id="ServiceResponsible" class="rightViewClass"> 
        <div id="ServiceResponsibleLabel" class="rightView" >
            @Html.Label("Service Responsible", new { @class = "rightView" })
        </div>
        
        <div id="ServiceResponsibleDropDown" class="rightadjacentView">
            @{
                Html.Telerik().ComboBox().Name("serviceResponsibleDropDownList")
                .BindTo((SelectList)Model.ServiceResponsible.ServiceTechnicianList)
                .Placeholder("<--SELECT-->")
                .HtmlAttributes(new { @class = "dropDownProperties" })
                .DropDownHtmlAttributes(new { @class = "dropDownProperties" })
                .SelectedIndex(0)
                .Render();
            }
        </div>
    </div>
    
</div>
                      <label class="labelHeadingClass">Check In Data</label>

<div id="CheckInData" class="fullViewThreeColumnforSmallerHeightClass">
    <div id="SerialNumber" class="leftViewClassforThirdColumn"> 
        <div id="SerialNumberLabel" class="leftView" >
            @Html.Label("Serial Number", new { @class = "leftView" })
        </div>

        <div id="SerialNumberTextBox" class="leftadjacentView">
                 @Html.TextBox("serialNumberTextBox", "", new { @class = "textBoxProperties" })
                
        </div>

    </div>
     <span style = "font-size: 8pt; font-family: Verdana;FONT-WEIGHT: bold;COLOR:Red" >*</span>
    <div id="PartNumber" class="rightViewClassforThirdColumn"> 
        <div id="PartNumberLabel" class="rightView" >
            @Html.Label("Part Number", new { @class = "rightView" })
        </div>

        <div id="PartNumberDropDown" class="rightadjacentView">
           @{
                Html.Telerik().ComboBox().Name("partNumberDropDownList")
                .BindTo((SelectList)Model.PartDetails.PartDetailsList)
                .Placeholder("<--SELECT-->")
                .HtmlAttributes(new { @class = "dropDownProperties" })
                .DropDownHtmlAttributes(new { @class = "dropDownProperties" })
                .SelectedIndex(0)
                .Render();
            }
        </div>
        
        <div id="AddButton" class="rightViewforThirdColumn" >
            <button class="t-button" type="button" id="Add" value="Add">Add</button>
        </div>
    </div>
    </div>
        </div>
    </div> 
    
    <div id="ServiceOrderGridDiv" class="serviceOrderLineGridClass" >
         @{
    
    Html.Telerik().Grid(Model.ServiceOrderLine.ServiceOrderLineList.AsEnumerable<Coinco.SMS.Website.Models.ServiceOrderLine>())
        .Name("ServiceOrderLineGrid")
        .DataKeys(keys =>
        {
            keys.Add(c => c.SerialNumber).RouteKey("serialNumber");
        })
        .Columns(columns =>
        {
            columns.Command(commands => commands
                    .Custom("getSalesHistoryDetails").ButtonType(GridButtonType.Image)
                    .DataRouteValues(route => route.Add(c => c.SerialNumber).RouteKey("serialNo"))
                    .Ajax(true)
                    .Action("GetSalesHistoryDetails", "CheckIn")).Title("History")

                .HtmlAttributes(new { style = "text-align: center", id = "viewSalesHistory" })
                .Width(65);
            columns.Bound(c => c.SerialNumber).Title("Serial Number").Width(1).Hidden();                                                                                                                                
            columns.Bound(c => c.SerialNumber).Title("Serial Number").Width(130).ReadOnly();
            columns.Bound(c => c.PartNumber).Title("Part Number").Width(120).ReadOnly();
            columns.Bound(c => c.PartType).Title("Part Type").Width(100).ReadOnly();
            columns.Bound(c => c.Quantity).Title("Quantity").Width(80).ReadOnly();
            columns.Bound(c => c.RepairType).Title("Repair Type").Width(120).ReadOnly();
            columns.Bound(c => c.Warranty).Title("Warranty").Width(100).ReadOnly();
            columns.Bound(c => c.Comments).Title("Comments").Width(120);
             
            columns.Command(commands =>
            {
                commands.Edit().ButtonType(GridButtonType.Image);
                commands.Delete().ButtonType(GridButtonType.Image);
            }).Width(80).Title("Commands") ;


        })

        .DataBinding(dataBinding =>
        {
            dataBinding.Ajax().OperationMode(GridOperationMode.Client).Select("_SelectionClientSide_ServiceOrderLines", "CheckIn")
                .Update("_UpdateServiceOrderLine", "CheckIn")
                .Delete("_DeleteServiceOrderLine", "CheckIn")
                .Enabled(true);
        }
        )
        .ClientEvents(events => events
            .OnSave("onSave")
            .OnComplete("onComplete")
            .OnDataBinding("onDataBinding")
            
            )
        
        .HtmlAttributes(new { style = "font-size: 8pt; font-family: Verdana;" })
        .Scrollable(c => c.Height("180px"))
       // .Pageable((pager => pager.PageSize(10)))
        //.Sortable()
       // .Selectable()
       // .Filterable()
      
       .Render();
    
        }        
  </div> 

    <div id="SubmitResult" class="submitResultClass"> 
        <button class="t-button" type="button" id="Create" value="Create">Create</button>                     
        <button class="t-button" type="button" id="Clear" value="Clear">Clear</button>
    </div>
</div>
}
  <script type="text/javascript">

      function onCustomerAccountDropDownListChange(e) {
      
          if (e != null) {
              var customerAccount = e.currentTarget.value;
              jQuery.ajax({
                  url: "/CheckIn/GetOtherDetails",
                  type: 'GET',
                  contentType: "application/json; charset=utf-8",
                  data: { customerAccount: customerAccount },
                  success: function (result) {

                      var serviceOrder = result;
                      var serviceTechnicianDropDownList = $('#serviceTechnicianDropDownList').data('tComboBox');
                      serviceTechnicianDropDownList.dataBind(serviceOrder.ServiceTechnician.ServiceTechnicianList);

                      var serviceResponsibleDropDownList = $('#serviceResponsibleDropDownList').data('tComboBox');
                      serviceResponsibleDropDownList.dataBind(serviceOrder.ServiceResponsible.ServiceTechnicianList);
                      
                      var woClassificationDropDownList = $('#woClassificationDropDownList').data('tComboBox');
                      woClassificationDropDownList.dataBind(serviceOrder.WOClassification.WOClassificationList);
                      
                      var partNumberDropDownList = $('#partNumberDropDownList').data('tComboBox');
                      partNumberDropDownList.dataBind(serviceOrder.PartDetails.PartDetailsList);
                    
                      $('#serviceTechnicianDropDownList').data('tComboBox').value('<--SELECT-->');
                      $('#serviceResponsibleDropDownList').data('tComboBox').value('<--SELECT-->');
                      $('#woClassificationDropDownList').data('tComboBox').value('<--SELECT-->');
                      $('#partNumberDropDownList').data('tComboBox').value('<--SELECT-->');
                    
                      var billingAddressGrid = $("#BillingAddressGrid").data("tGrid");
                      var shippingAddressGrid = $("#ShippingAddressGrid").data("tGrid");
                      billingAddressGrid.dataBind(serviceOrder.BillingAddressList);
                      shippingAddressGrid.dataBind(serviceOrder.ShippingAddressList);

                      // jQuery('#OtherDetailsView').html(result);
                      jQuery.ajax({
                          url: "/CheckIn/ClearServiceOrderLines",
                          type: 'POST',
                          success: function (result) {
                              var serviceOrderLineGrid = $("#ServiceOrderLineGrid").data("tGrid");
                              serviceOrderLineGrid.data = null;
                              serviceOrderLineGrid.dataSource = null;
                              serviceOrderLineGrid.dataBind();
                              //jQuery('#ServiceOrderGridDiv').html(result);

                          },
                          error: function (result) {
                              alert('An error occured while clearing the service order lines. Please try again');
                          }

                      });
                  },
                  error: function (result) {
                      alert(result.response);
                      // alert('An error occured while getting the input details. Please try again');
                  }

              });
             
             return false;
          }
      }

      $(function () {
          $('#serialNumberTextBox').keydown(function (e) {
              if (e.keyCode == 13) {

                  var isSerialNumberExist = false;
                  var partNumber = $('#partNumberDropDownList').val();
                  if (($.trim(partNumber) == '<--SELECT-->') || (partNumber == null)) {
                      partNumber = '';
                  }
                  var serialNumber = $('#serialNumberTextBox').val();
                  if (($.trim(serialNumber) == '') || (serialNumber == null)) {
                      alert('Please enter the serial number before adding a line.');
                      $('#serialNumberTextBox').addClass("input-validation-error");
                      $('#serialNumberTextBox').focus();
                      return;
                  }

                  $("#ServiceOrderLineGrid .t-grid-content tbody > tr").each(function () {
                      var tr = this;
                      var cells = tr.cells;
                      if (cells[2] != null) {
                          var firstCell = cells[2].innerHTML;
                          if (firstCell == serialNumber) {
                              alert('The entered serial number is already availble in the lines table. Please enter a different serial number.');
                              $('#serialNumberTextBox').focus();
                              isSerialNumberExist = true;
                              return;
                          }
                      }
                  });
                  if (isSerialNumberExist) {
                      return;
                  }
                  jQuery.ajax({
                      url: "/CheckIn/GetServiceOrderLinesHistoryBySerialNumberPartNumber",
                      type: 'GET',
                      contentType: "application/json; charset=utf-8",
                      data: { partNumber: partNumber, serialNumber: serialNumber },
                      success: function (result) {
                          // jQuery('#ServiceOrderGridDiv').html(result);
                          var serviceOrderLineGrid = $("#ServiceOrderLineGrid").data("tGrid");
                          serviceOrderLineGrid.dataBind(result);
                      },
                      error: function (result) {
                          var response = result.responseText;
                          var start = result.responseText.search("<title>") + 7;
                          var end = result.responseText.search("</title>");

                          if (start > 0 && end > 0)
                              alert(" " + result.responseText.substring(start, end) + ".");

                          //alert('An error occured while adding the service order lines. Please check the inputs and try again');

                      }

                  });
                  return false;
              }
          });
      });


      jQuery('#Add').click(function () {
          var isSerialNumberExist = false;
          var partNumber = $('#partNumberDropDownList').val();
          if (($.trim(partNumber) == '<--SELECT-->') || (partNumber == null)) {
              partNumber = '';
          }
          var serialNumber = $('#serialNumberTextBox').val();
          if (($.trim(serialNumber) == '') || (serialNumber == null)) {
              alert('Please enter the serial number before adding a line.');
              $('#serialNumberTextBox').addClass("input-validation-error");
              $('#serialNumberTextBox').focus();
              return;
          }

          $("#ServiceOrderLineGrid .t-grid-content tbody > tr").each(function () {
              var tr = this;
              var cells = tr.cells;
              if (cells[2] != null) {
                  var firstCell = cells[2].innerHTML;
                  if (firstCell == serialNumber) {
                      alert('The entered serial number is already availble in the lines table. Please enter a different serial number.');
                      $('#serialNumberTextBox').focus();
                      isSerialNumberExist = true;
                      return;
                  }
              }
          });
          if (isSerialNumberExist) {
              return;
          }
          jQuery.ajax({
              url: "/CheckIn/GetServiceOrderLinesHistoryBySerialNumberPartNumber",
              type: 'GET',
              contentType: "application/json; charset=utf-8",
              data: { partNumber: partNumber, serialNumber: serialNumber },
              success: function (result) {
                  var serviceOrderLineGrid = $("#ServiceOrderLineGrid").data("tGrid");
                  serviceOrderLineGrid.dataBind(result);
              },
              error: function (result) {
                  var response = result.responseText;
                  var start = result.responseText.search("<title>") + 7;
                  var end = result.responseText.search("</title>");

                  if (start > 0 && end > 0)
                      alert(" " + result.responseText.substring(start, end) + ".");
              }

          });
          return false;
      });

      jQuery('#Create').click(function () {

          var customerAccount = $('#customerAccountDropDownList').val();
          var customerPo = $('#customerPOTextBox').val();
          if (($.trim(customerPo) == '<--SELECT-->') || (customerPo == null)) {
              customerPo = '';
          }
          var technicinanNo = $('#serviceTechnicianDropDownList').val();
          if (($.trim(technicinanNo) == '<--SELECT-->') || (technicinanNo == null)) {
              technicinanNo = '';
          }
          var responsibleNo = $('#serviceResponsibleDropDownList').val();

          if (($.trim(responsibleNo) == '<--SELECT-->') || (responsibleNo == null)) {
              responsibleNo = '';
          }
          var woClassification = $('#woClassificationDropDownList').val();
          if (($.trim(woClassification) == '<--SELECT-->') || (woClassification == null)) {
              woClassification = '';
          }
          var customerComments = $('#customerCommentTextArea').val();
          var $checkedRecords = $(':checked');
          var addressId;
          if ($checkedRecords.length < 1) {
              alert('Please select atleast one shipping address.');
              return;
          }
          $checkedRecords.each(function (index, domEle) {
              // domEle == this
              if ($checkedRecords[index].checked = true) {
                  addressId = $checkedRecords[index].value;
              }

          });
          var serviceOrderLineGrid = $("#ServiceOrderLineGrid").data("tGrid");
          if (serviceOrderLineGrid.data.length < 1) {
              alert('Please add atleast one service order line to create an order.');
              return;
          }
          jQuery.ajax({
              url: "/CheckIn/CreateServiceOrder",
              type: 'GET',
              contentType: "application/json; charset=utf-8",

              data: { customerAccount: customerAccount, customerPo: customerPo, addressId: addressId, technicinanNo: technicinanNo, responsibleNo: responsibleNo, woClassification: woClassification, customerComments: customerComments },
              success: function (result) {

                  serviceOrderLineGrid.data = null;
                  serviceOrderLineGrid.dataSource = null;
                  serviceOrderLineGrid.dataBind();
                  $('#customerAccountDropDownList').data('tComboBox').value('<--SELECT-->');
                  $('#customerPOTextBox').val('');
                  $('#serviceTechnicianDropDownList').data('tComboBox').value('<--SELECT-->');
                  $('#serviceResponsibleDropDownList').data('tComboBox').value('<--SELECT-->');
                  $('#woClassificationDropDownList').data('tComboBox').value('<--SELECT-->');
                  $('#customerCommentTextArea').val('');
                  $('#serialNumberTextBox').val('');
                  $('#partNumberDropDownList').data('tComboBox').value('<--SELECT-->');
                  var billingAddressGrid = $("#BillingAddressGrid").data("tGrid");
                  var shippingAddressGrid = $("#ShippingAddressGrid").data("tGrid");
                  var testData;
                  billingAddressGrid.dataBind(testData);
                  shippingAddressGrid.dataBind(testData);
                  alert('Service order created successfully.');

              },
              error: function (result) {
                  alert('An error occured while creating the service order. Please check the inputs and try again');
              }

          });
          return false;
      });

      jQuery('#Clear').click(function () {

          $('#customerAccountDropDownList').data('tComboBox').value('<--SELECT-->');
          $('#customerPOTextBox').val('');
          $('#serviceTechnicianDropDownList').data('tComboBox').value('<--SELECT-->');
          $('#serviceResponsibleDropDownList').data('tComboBox').value('<--SELECT-->');
          $('#woClassificationDropDownList').data('tComboBox').value('<--SELECT-->');
          $('#customerCommentTextArea').val('');
          $('#serialNumberTextBox').val('');
          $('#partNumberDropDownList').data('tComboBox').value('<--SELECT-->');
          var billingAddressGrid = $("#BillingAddressGrid").data("tGrid");
          var shippingAddressGrid = $("#ShippingAddressGrid").data("tGrid");
          var testData;
          billingAddressGrid.dataBind(testData);
          shippingAddressGrid.dataBind(testData);

          //$('#partNumberDropDownList').val('');
          jQuery.ajax({
              url: "/CheckIn/ClearServiceOrderLines",
              type: 'GET',
              datatype: 'jsonp',
              contentType: "application/json; charset=utf-8",
              success: function (result) {
                    //  jQuery('#ServiceOrderGridDiv').html(result);
                  var serviceOrderLineGrid = $("#ServiceOrderLineGrid").data("tGrid");
                  serviceOrderLineGrid.data = null;
                  serviceOrderLineGrid.dataSource = null;
                  serviceOrderLineGrid.dataBind();

              },
              error: function (result) {
                  alert('An error occured while clearing the values. Please try again');
              }

          });
      });

      jQuery('#Close').click(function () {
          $('#SalesDetailsHistory').data('tWindow').close();

      });


      function onSave(e) {
          e.Data = e.values;
      }


      function onComplete(e) {

          if (e.name == "getSalesHistoryDetails") {
              var detailWindow = $("#SalesDetailsHistory").data("tWindow");
              var saleshistory = e.response;
              if (saleshistory.SalesSerialNumber != null) {
                  $('#serialNumberLabel').text(saleshistory.CustomerName);
              }
              else {
                  $('#serialNumberLabel').text('');
              }
              if (saleshistory.CustomerName != null) {
                  $('#nameLabel').text(saleshistory.CustomerName);
              }
              else {
                  $('#nameLabel').text('');
              }

              if (saleshistory.ItemNumber != null) {
                  $('#itemNumberLabel').text(saleshistory.ItemNumber);
              }
              else {
                  $('#itemNumberLabel').text('');
              }

              if (saleshistory.InvoiceNumber != null) {
                  $('#invoiceNumberLabel').text(saleshistory.InvoiceNumber);
              }
              else {
                  $('#invoiceNumberLabel').text('');
              }

              if (saleshistory.ItemNumber != null) {
                  $('#salesOrderLabel').text(saleshistory.ItemNumber);
              }
              else {
                  $('#salesOrderLabel').text('');
              }

              if (saleshistory.InvoiceNumber != null) {
                  $('#invoiceDateLabel').text(saleshistory.InvoiceNumber);
              }
              else {
                  $('#invoiceDateLabel').text('');
              }
              if (saleshistory.ServiceInfoList != null) {
                  var serviceInformationGrid = $("#ServiceInformationGrid").data("tGrid");
            
                      serviceInformationGrid.dataBind(saleshistory.ServiceInfoList);
                      detailWindow.center().open();
                
              }
          }
      }

      function onDataBound(e) {
          //restore selected checkboxes.  
          var $checkedRecords = $(':checked');
          $checkedRecords.each(function (index, domEle) {
              // domEle == this
              if (index == 0) {
                  $checkedRecords[index].checked = true;
              }
              else {
                  $checkedRecords[index].checked = false;
              }

          });
      }  

      function onLoad(e) {

             $(this).find(':checkbox').click(function (e) {

                var $checkedRecords = $(':checked');
                $checkedRecords.each(function (index, domEle) {
                    // domEle == this
                    if ($checkedRecords[index].value != e.currentTarget.value) {
                        $checkedRecords[index].checked = false;
                    }

                });

            })
        }

       
      jQuery('#serialNumberTextBox').keyup(function () {
          $('#serialNumberTextBox').removeClass("input-validation-error");
      });

      function onDataBinding(e) {

      }

</script>