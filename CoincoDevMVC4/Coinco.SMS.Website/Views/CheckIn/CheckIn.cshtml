@using Telerik.Web.Mvc
@model Coinco.SMS.Website.Models.ServiceOrder

@{
    ViewBag.Title = "CheckIn";
}
@{ Html.Telerik().Window()
        .Name("SalesDetailsHistory")
        .Modal(true)
        .Title("Sales Details History")
        .Content(@<text><div id="SalesDetailsHistory">
            <h6>Sales Information</h6>
            <div id="firstSalesInfo" class="fullViewforSmallerHeightClass">
                <div id="SerialNumber" class="leftViewClass"> 
                    <div id="SerialNumberDiv" class="leftView" >
                        @Html.Label("Serial Number", new { @class = "leftView" })
                    </div>
                    <div id="SerialNumberResult" class="leftadjacentView">
                        @Html.Label("Serial Number", new { @class = "leftView" , id="serialNumberLabel"})                  
                    </div>
                </div>
                 
                 <div id="Name" class="rightViewClass"> 
                    <div id="nameDiv" class="rightView" >
                        @Html.Label("Name", new { @class = "rightView" })
                    </div>
                    <div id="nameResult" class="rightadjacentView">                  
                          @Html.Label("Name", new { @class = "leftView" , id="nameLabel"})     
                    </div>
                </div>

            </div>

            <div id="secondSalesInfo" class="fullViewforSmallerHeightClass">
                <div id="ItemNumber" class="leftViewClass"> 
                    <div id="ItemNumberDiv" class="leftView" >
                        @Html.Label("Item Number", new { @class = "leftView" })
                    </div>
                    <div id="ItemNumberResult" class="leftadjacentView">                  
                        @Html.Label("Item Number", new { @class = "leftView" , id="itemNumberLabel"})     
                    </div>
                </div>
                 
                 <div id="InvoiceNumber" class="rightViewClass"> 
                    <div id="invoiceNumberDiv" class="rightView" >
                        @Html.Label("Invoice Number", new { @class = "rightView" })
                    </div>
                    <div id="invoiceNumberResult" class="rightadjacentView">                  
                                    @Html.Label("Invoice Number", new { @class = "leftView", id = "invoiceNumberLabel" })     
                    </div>
                </div>

            </div>

            <div id="thirdSalesInfo" class="fullViewforSmallerHeightClass">
                <div id="SalesOrder" class="leftViewClass"> 
                    <div id="salesOrderDiv" class="leftView" >
                        @Html.Label("SalesOrder", new { @class = "leftView" })
                    </div>
                    <div id="SalesOrderResult" class="leftadjacentView">                  
                        @Html.Label("Sales Order", new { @class = "leftView" , id="salesOrderLabel"})     
                    </div>
                </div>
                 
                 <div id="InvoiceDate" class="rightViewClass"> 
                    <div id="invoiceDateDiv" class="rightView" >
                        @Html.Label("Invoice Date", new { @class = "rightView" })
                    </div>
                    <div id="invoiceDateResult" class="rightadjacentView">                  
                                    @Html.Label("Invoice Date", new { @class = "leftView", id = "invoiceDateLabel" })     
                    </div>
                </div>

            </div>
            <h6>Service Information</h6>
            <div id ="serviceInfoGridDiv" class="serviceOrderLineGridClass" >
       @{
    
           Html.Telerik().Grid<Coinco.SMS.Website.Models.SalesHistory>((IEnumerable<Coinco.SMS.Website.Models.SalesHistory>)ViewData["ServiceInformation"])
        .Name("ServiceInformationGrid")
        
        .Columns(columns =>
        {
            columns.Bound(c => c.SalesServiceOrder).Title("Service Order").Width(120).ReadOnly();                                                                                                                                
            columns.Bound(c => c.SalesPrice).Title("Service Amount").Width(130).ReadOnly();
            columns.Bound(c => c.DateExecution).Title("Date").Width(110).ReadOnly();
            columns.Bound(c => c.Description).Title("Description").ReadOnly();              
        })

        .DataBinding(dataBinding =>
        {
            dataBinding.Ajax().OperationMode(GridOperationMode.Client).Select("_SelectionClientSide_ServiceInfoLines", "CheckIn")
                .Enabled(true);
        }
        )
        
        .HtmlAttributes(new { style = "font-size: 8pt; font-family: Verdana;" })
        .Scrollable(c => c.Height("180px"))
        .Pageable((pager => pager.PageSize(10)))
        .Sortable()
        .Selectable()
        .Filterable()
       .Render();
    
        }
      
        
        </text>)
        .Resizable(resizing => resizing
            .Enabled(true)
            .MinHeight(500)
            .MinWidth(800)
            .MaxHeight(500)
            .MaxWidth(800)
        )
        .Buttons(b => b.Maximize().Close())
        .Visible(false)
        .Width(800)
        .Height(500)
        .Render();
        
}
  </div> 

            <div id="closeButtonDiv" class="submitResultClass">
                <button class="t-button" type="button" id="Close" value="Close">Close</button>     
            </div>

</div>

@using (Html.BeginForm())
{
<div id="ServiceOrderAdditionDiv">
    <div id="ServiceOrderDetailsDiv">
        <div id="Identification">
            <h6>Identification</h6>
            <div id="IdentificationDetails" class="fullViewforSmallerHeightClass">
                <div id="CustomerAccount" class="leftViewClass"> 
                    <div id="CustomerAccountLabel" class="leftView" >
                        @Html.Label("Customer Account", new { @class = "leftView" })
                    </div>
                    <div id="CustomerAccountDropDown" class="leftadjacentView">                  
                        @{
    Html.Telerik().ComboBox().Name("customerAccountDropDownList")
        .BindTo((SelectList)ViewData["CustomerList"])
        .Placeholder("<--SELECT-->")
        .ClientEvents(e => e.OnChange("onCustomerAccountDropDownListChange"))
        .HtmlAttributes(new { style = "font-size: 8pt; font-family: Verdana; width:200px" })
        .DropDownHtmlAttributes(new { style = "font-size: 8pt; font-family: Verdana;" })
        .SelectedIndex(0)
        .Render();
                                }
           
                    </div>
                </div>
            </div>
        </div>
        
        <div id="OtherDetailsView" class="combinedViewForOtherDetailsCheckInDataClass" >
                @{Html.RenderPartial("OtherDetails");}
        </div>
    </div> 
    
    <div id="ServiceOrderGridDiv" class="serviceOrderLineGridClass" >
         @{Html.RenderPartial("ServiceOrderLine");}        
  </div> 

    <div id="SubmitResult" class="submitResultClass"> 
        <button class="t-button" type="button" id="Create" value="Create">Create</button>                     
        <button class="t-button" type="button" id="Clear" value="Clear">Clear</button>
    </div>
</div>
}
  <script type="text/javascript">

      function onCustomerAccountDropDownListChange(e) {
          if (e != null) {
              var customerAccount = e.currentTarget.value;
              jQuery.ajax({
                  url: "/CheckIn/GetOtherDetails",
                  type: 'GET',
                  data: { customerAccount: customerAccount },
                  success: function (result) {
                      jQuery('#OtherDetailsView').html(result);
                      jQuery.ajax({
                          url: "/CheckIn/ClearServiceOrderLines",
                          type: 'POST',
                          success: function (result) {
                              jQuery('#ServiceOrderGridDiv').html(result);

                          },
                          error: function (result) {
                              alert('An error occured while clearing the service order lines. Please try again');
                          }

                      });
                  },
                  error: function (result) {
                      alert('An error occured while getting the input details. Please try again');
                  }

              });
             
             return false;
          }
      }


      jQuery('#Create').click(function () {
          var customerAccount = $('#customerAccountDropDownList').val();
          var customerPo = $('#customerPOTextBox').val();
          var technicinanNo = $('#serviceTechnicianDropDownList').val();
          var responsibleNo = $('#serviceResponsibleDropDownList').val();
          var woClassification = $('#woClassificationDropDownList').val();
          var customerComments = $('#customerCommentTextArea').val();
          var $checkedRecords = $(':checked');
          var addressId;
          if ($checkedRecords.length < 1) {
              alert('Please select atleast one shipping address.');
              return;
          }
          $checkedRecords.each(function (index, domEle) {
              // domEle == this
              if ($checkedRecords[index].checked = true) {
                  addressId = $checkedRecords[index].value;
              }

          });
          jQuery.ajax({
              url: "/CheckIn/CreateServiceOrder",
              type: 'POST',

              data: { customerAccount: customerAccount, customerPo: customerPo,addressId:addressId, technicinanNo: technicinanNo, responsibleNo: responsibleNo, woClassification: woClassification, customerComments: customerComments },
              success: function (result) {
                  jQuery('#ServiceOrderGridDiv').html(result);
                  $('#customerAccountDropDownList').data('tComboBox').value('<--Select-->');
                  $('#customerPOTextBox').val('');
                  $('#serviceTechnicianDropDownList').data('tComboBox').value('<--Select-->');
                  $('#serviceResponsibleDropDownList').data('tComboBox').value('<--Select-->');
                  $('#woClassificationDropDownList').data('tComboBox').value('<--Select-->');
                  $('#customerCommentTextArea').val('');
                  $('#serialNumberTextBox').val('');
                  $('#partNumberDropDownList').data('tComboBox').value('<--Select-->');
                  var billingAddressGrid = $("#BillingAddressGrid").data("tGrid");
                  var shippingAddressGrid = $("#ShippingAddressGrid").data("tGrid");
                  var testData;
                  billingAddressGrid.dataBind(testData);
                  shippingAddressGrid.dataBind(testData);
                  alert('Service order created successfully.');

              },
              error: function (result) {
                  alert('An error occured while creating the service order. Please check the inputs and try again');
              }

          });
          return false;
      });

      jQuery('#Clear').click(function () {
          $('#customerAccountDropDownList').data('tComboBox').value('<--Select-->');
          $('#customerPOTextBox').val('');
          $('#serviceTechnicianDropDownList').data('tComboBox').value('<--Select-->');
          $('#serviceResponsibleDropDownList').data('tComboBox').value('<--Select-->');
          $('#woClassificationDropDownList').data('tComboBox').value('<--Select-->');
          $('#customerCommentTextArea').val('');
          $('#serialNumberTextBox').val('');
          $('#partNumberDropDownList').data('tComboBox').value('<--Select-->');
          var billingAddressGrid = $("#BillingAddressGrid").data("tGrid");
          var shippingAddressGrid = $("#ShippingAddressGrid").data("tGrid");
          var testData;
          billingAddressGrid.dataBind(testData);
          shippingAddressGrid.dataBind(testData);
          //$('#partNumberDropDownList').val('');
          jQuery.ajax({
              url: "/CheckIn/ClearServiceOrderLines",
              type: 'POST',
              success: function (result) {
                  jQuery('#ServiceOrderGridDiv').html(result);
              },
              error: function (result) {
                  alert('An error occured while clearing the values. Please try again');
              }

          });
      });

      jQuery('#Close').click(function () {
          $('#SalesDetailsHistory').data('tWindow').close();
         
      });   
</script>