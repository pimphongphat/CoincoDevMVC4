@{
    
   Html.Telerik().Grid<Coinco.SMS.Website.Models.ServiceOrderLine>((IEnumerable<Coinco.SMS.Website.Models.ServiceOrderLine>)ViewData["ServiceOrderLine"])
        .Name("ServiceOrderLineGrid")
        .DataKeys(keys =>
        {
            keys.Add(c => c.SerialNumber).RouteKey("serialNumber");
        })
        .Columns(columns =>
        {
            columns.Command(commands => commands
                    .Custom("getSalesHistoryDetails").ButtonType(GridButtonType.BareImage)
                    .DataRouteValues(route => route.Add(c => c.SerialNumber).RouteKey("serialNo"))
                    .Ajax(true)
                    .Action("GetSalesHistoryDetails", "CheckIn")).Title("History")
                .HtmlAttributes(new { style = "text-align: center" })
                .Width(95);
            columns.Bound(c => c.SerialNumber).Title("Serial Number").Width(1).Hidden();                                                                                                                                
            columns.Bound(c => c.SerialNumber).Title("Serial Number").Width(130).ReadOnly();
            columns.Bound(c => c.PartNumber).Title("Part Number").Width(120).ReadOnly();
            columns.Bound(c => c.PartType).Title("Part Type").Width(100).ReadOnly();
            columns.Bound(c => c.Quantity).Title("Quantity").Width(80).ReadOnly();
            columns.Bound(c => c.RepairType).Title("Repair Type").Width(120).ReadOnly();
            columns.Bound(c => c.Warranty).Title("Warranty").Width(100).ReadOnly();
            columns.Bound(c => c.Comments).Title("Comments").Width(120);
             
            columns.Command(commands =>
            {
                commands.Edit().ButtonType(GridButtonType.Image);
                commands.Delete().ButtonType(GridButtonType.Image);
            }).Width(80).Title("Commands") ;


        })

        .DataBinding(dataBinding =>
        {
            dataBinding.Ajax().OperationMode(GridOperationMode.Client).Select("_SelectionClientSide_ServiceOrderLines", "CheckIn")
                .Update("_UpdateServiceOrderLine", "CheckIn")
                .Delete("_DeleteServiceOrderLine", "CheckIn")
                .Enabled(true);
        }
        )
        .ClientEvents(events => events
            .OnSave("onSave")
            .OnComplete("onComplete")
            )
        
        .HtmlAttributes(new { style = "font-size: 8pt; font-family: Verdana;" })
        .Scrollable(c => c.Height("180px"))
        .Pageable((pager => pager.PageSize(10)))
        .Sortable()
        .Selectable()
        .Filterable()
       .Render();
    
        }

        <script type="text/javascript">

            function onSave(e) {
                e.Data = e.values;
            }


            function onComplete(e) {
            if (e.name == "getSalesHistoryDetails") {
                    var detailWindow = $("#SalesDetailsHistory").data("tWindow");
                    var saleshistory = e.response;
                    if (saleshistory.SalesSerialNumber != null) {
                        $('#serialNumberLabel').text(saleshistory.CustomerName);
                    }
                    else {
                        $('#serialNumberLabel').text('');
                    }
                    if (saleshistory.CustomerName != null) {
                        $('#nameLabel').text(saleshistory.CustomerName);
                    }
                    else {
                        $('#nameLabel').text('');
                    }

                    if (saleshistory.ItemNumber != null) {
                        $('#itemNumberLabel').text(saleshistory.ItemNumber);
                    }
                    else {
                        $('#itemNumberLabel').text('');
                    }

                    if (saleshistory.InvoiceNumber != null) {
                        $('#invoiceNumberLabel').text(saleshistory.InvoiceNumber);
                    }
                    else {
                        $('#invoiceNumberLabel').text('');
                    }

                    if (saleshistory.ItemNumber != null) {
                        $('#salesOrderLabel').text(saleshistory.ItemNumber);
                    }
                    else {
                        $('#salesOrderLabel').text('');
                    }

                    if (saleshistory.InvoiceNumber != null) {
                        $('#invoiceDateLabel').text(saleshistory.InvoiceNumber);
                    }
                    else {
                        $('#invoiceDateLabel').text('');
                    }
                    if (saleshistory.ServiceInfoList != null) {
                        var serviceInformationGrid = $("#ServiceInformationGrid").data("tGrid");
                        serviceInformationGrid.dataBind(saleshistory.ServiceInfoList);
                        detailWindow.center().open();
                    }
                }
            }

            

           

        </script>