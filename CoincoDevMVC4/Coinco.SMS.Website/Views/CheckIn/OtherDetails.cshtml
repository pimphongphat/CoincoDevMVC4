@model Coinco.SMS.Website.Models.ServiceOrder

    <div id="OtherDetails" class="fullViewforMediumHeightClass">
    <div id="CustomerComments" class="leftViewClass"> 
        <div id="CustomerCommentLabel" class="leftView" >
            @Html.Label("Customer Comments", new { @class = "leftView" })
        </div>
        <div id="CustomerCommentTextBox" class="leftadjacentView">
  
            @Html.TextAreaFor(p => p.Comments, new { @class = "textAreaProperties", id = "customerCommentTextArea" }) 

        </div>
    </div>

    <div id="CustomerPO" class="rightViewClass"> 
        <div id="CustomerPOLabel" class="rightView" >
            @Html.Label("Customer PO", new { @class = "rightView" })
        </div>
        <div id="CustomerPOTextBox" class="rightadjacentView">
  
                 @Html.TextBoxFor(p => p.CustomerPO, new { @class = "textBoxProperties", id = "customerPOTextBox" }) 

        </div>
    </div>
    <br />
        <div id="ServiceTechnician" class="rightViewClass"> 
        <div id="ServiceTechnicianLabel" class="rightView" >
            @Html.Label("Service Technician", new { @class = "rightView" })
        </div>
        <div id="ServiceTechnicianDropDown" class="rightadjacentView">
@*                 @Html.DropDownListFor(p => p.ServiceTechnician, (SelectList)ViewData["ServiceTechnicianList"], "<--Select One-->", new { @class = "dropDownProperties", id = "serviceTechnicianDropDownList" })           
*@                 @{
    Html.Telerik().ComboBox().Name("serviceTechnicianDropDownList")
        .BindTo((SelectList)ViewData["ServiceTechnicianList"])
        //.ClientEvents(e => e.OnOpen("onOpen"))
        .HtmlAttributes(new { style = "font-size: 8pt; font-family: Verdana;width:200px" })
        .DropDownHtmlAttributes(new { style = "font-size: 8pt; font-family: Verdana;" })
        .Render();
        }
        </div>
    </div>
    </div>
    <div id="WOClassificationDetails" class="fullViewforSmallerHeightClass">
     <div id="WOClassification" class="leftViewClass"> 
        <div id="WOClassificationLabel" class="leftView" >
            @Html.Label("WO Classification", new { @class = "leftView" })
        </div>
        <div id="WOClassificationDropDown" class="leftadjacentView">
            
@*                @Html.DropDownListFor(p => p.WOClassification, (SelectList)ViewData["WOClassificationList"], "<--Select One-->", new { @class = "dropDownProperties", id = "woClassificationDropDownList" })
*@              @{
    Html.Telerik().ComboBox().Name("woClassificationDropDownList")
        .BindTo((SelectList)ViewData["WOClassificationList"])
        //.ClientEvents(e => e.OnOpen("onOpen"))
        .HtmlAttributes(new { style = "font-size: 8pt; font-family: Verdana;width:200px" })
        .DropDownHtmlAttributes(new { style = "font-size: 8pt; font-family: Verdana;" })
        .Render();
        }
        </div>
    </div>

      <div id="ServiceResponsible" class="rightViewClass"> 
        <div id="ServiceResponsibleLabel" class="rightView" >
            @Html.Label("Service Responsible", new { @class = "rightView" })
        </div>
        <div id="ServiceResponsibleDropDown" class="rightadjacentView">
  
@*               @Html.DropDownListFor(p => p.ServiceResponsible, (SelectList)ViewData["ServiceResponsibleList"], "<--Select One-->", new { @class = "dropDownProperties", id = "serviceResponsibleDropDownList" })
*@                @{
    Html.Telerik().ComboBox().Name("serviceResponsibleDropDownList")
        .BindTo((SelectList)ViewData["ServiceResponsibleList"])
        //.ClientEvents(e => e.OnOpen("onOpen"))
        .HtmlAttributes(new { style = "font-size: 8pt; font-family: Verdana;width:200px" })
        .DropDownHtmlAttributes(new { style = "font-size: 8pt; font-family: Verdana;" })
        .Render();
        }
        </div>
    </div>
    
    </div>
            <h6>Check In Data</h6>
        <div id="CheckInData" class="fullViewThreeColumnforSmallerHeightClass">
     <div id="SerialNumber" class="leftViewClass"> 
        <div id="SerialNumberLabel" class="leftView" >
            @Html.Label("Serial Number", new { @class = "leftView" })
        </div>
        <div id="SerialNumberTextBox" class="leftadjacentView">

                 @Html.TextBox("serialNumberTextBox", "", new { @class = "textBoxProperties" }) 
        </div>
    </div>

       <div id="PartNumber" class="rightViewClassforThirdColumn"> 
        <div id="PartNumberLabel" class="rightView" >
            @Html.Label("Part Number", new { @class = "rightView" })
        </div>
        <div id="PartNumberDropDown" class="rightadjacentView">
  
@*               @Html.DropDownList("partNumberDropDownList", (SelectList)ViewData["PartNumberList"], "<--Select One-->", new { @class = "dropDownProperties" })
*@             @{
    Html.Telerik().ComboBox().Name("partNumberDropDownList")
        .BindTo((SelectList)ViewData["PartNumberList"])
        //.ClientEvents(e => e.OnOpen("onOpen"))
        .HtmlAttributes(new { style = "font-size: 8pt; font-family: Verdana;" })
        .DropDownHtmlAttributes(new { style = "font-size: 8pt; font-family: Verdana;" })     
        .Render();
        }
        </div>
         <div id="AddButton" class="rightViewforThirdColumn" >
                    <button class="t-button" type="button" id="Add" value="Add">Add</button>

        </div>
    </div>
    </div>

    <script type="text/javascript">
        jQuery('#Add').click(function () {
            var partNumber = $('#partNumberDropDownList').val();
            var serialNumber = $('#serialNumberTextBox').val();
            jQuery.ajax({
                url: "/CheckIn/GetServiceOrderLinesHistoryBySerialNumberPartNumber",
                type: 'POST',
                data: { partNumber: partNumber, serialNumber: serialNumber },
                success: function (result) {
                    jQuery('#ServiceOrderGridDiv').html(result);
                },
                error: function (result) {
                    alert(result.responseText);
                }

            });
            return false;
        });
    </script>