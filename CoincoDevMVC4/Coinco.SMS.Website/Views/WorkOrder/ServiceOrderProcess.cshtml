@model Coinco.SMS.Website.Models.SerivceOrderPartLine
@using Telerik.Web.Mvc.UI
@using Telerik.Web.Mvc
@{
    ViewBag.Title = "Order Process";
}
<style type="text/css">
    div
    {
        font-weight: normal;
        font-style: normal;
        font-size: 1.02em;
    }
    .ui-widget
    {
        font-family: inherit;
        font-size: inherit;
    }
</style>
<div class="pageCointainer">
    <br />
    <div id="serviceProcessDiv" class="serviceProcessDiv">
        <div class="leftcolumn">
            @Html.Label("Service Order:", new { @class = "labelHeaderView", id = "serviceOrderLabel" })
            @Html.DisplayFor(x => TempData["ServiceOrderId"], new { @class = "labelViewSO", id = "serviceOrderViewlabel" })
            <br />
            @Html.Label("Serial Number:", new { @class = "labelHeaderView", id = "serialNumberLabel" })
            @{Html.Telerik().ComboBox().Name("slNumberDropDownList")
            .BindTo((SelectList)ViewData["WorkSerialNumberList"])
            .ClientEvents(e => e.OnChange("onserialNumberDropDownChange"))
            .Placeholder("-- Select --")
            .HtmlAttributes(new { style = "font-size: 8pt; font-family: Verdana; width:150px; marign:5px;" })
            .DropDownHtmlAttributes(new { style = "font-size: 8pt; font-family: Verdana;" })
            .SelectedIndex(0)
            .Render();
            }
            <br />
        </div>
        <div id="partNumberView">
            @{Html.RenderPartial("PartDetailsView");}
        </div>
    </div>
    <div class="addLinesDiv">
        <div class="addLineleftcolumn">
            <h6>
                Add Lines</h6>
            <label>
                Transaction Type:</label>
            @{Html.Telerik().ComboBox().Name("transactionTypeDropDownList")
            .DataBinding(binding => binding.Ajax().Select("_GetTransactionTypes", "WorkOrder"))
             .SelectedIndex(0)
            .ClientEvents(e => e.OnChange("ontransactionHide"))
            .HtmlAttributes(new { style = "font-size: 8pt; font-family: Verdana; width:150px" })
            .DropDownHtmlAttributes(new { style = "font-size: 8pt; font-family: Verdana;" })
            .CascadeTo("specialtyCodeDropDownList")
            .Render();
            }
            <br />
            <label>
                Description:</label>
            @Html.TextAreaFor(x => x.Description, new { id = "descriptionText" })<br />
            <label>
                Failure Code:</label>
            @{Html.Telerik().ComboBox().Name("failureCodeDropDownList")
            .BindTo((SelectList)ViewData["FailureCodeList"])
            .Placeholder("-- Select --")
            .HtmlAttributes(new { style = "font-size: 8pt; font-family: Verdana; width:150px" })
            .DropDownHtmlAttributes(new { style = "font-size: 8pt; font-family: Verdana;" })
            .SelectedIndex(0)

            .Render();
            }
            <br />
            <label>
                Specialty Code:</label>
            @{Html.Telerik().ComboBox().Name("specialtyCodeDropDownList")
            .DataBinding(binding => binding.Ajax().Select("_GetDropDownListSpecialtyCode", "WorkOrder"))
            .Placeholder("-- Select --")
            .HtmlAttributes(new { style = "font-size: 8pt; font-family: Verdana; width:150px" })
            .DropDownHtmlAttributes(new { style = "font-size: 8pt; font-family: Verdana;" })
            .SelectedIndex(0)
            .Render();
            }
            <label>
                Line Property:</label>
            @{Html.Telerik().ComboBox().Name("LinePropertyDropDownList")
            .BindTo((SelectList)ViewData["LinePropertyList"])
            .Placeholder("-- Select --")
            .HtmlAttributes(new { style = "font-size: 8pt; font-family: Verdana; width:150px" })
            .DropDownHtmlAttributes(new { style = "font-size: 8pt; font-family: Verdana;" })
            .SelectedIndex(0)
            .Render();
            }
            <br />
        </div>
        <div class="addLinecentercolumn">
            <label>
                Quantity:</label>
            @Html.TextBoxFor(x => x.Quantity, new { @class = "singleTextBox", id = "quantityText" })<br />
            <label>
                Technician:</label>
            @{Html.Telerik().ComboBox().Name("techniacianDropDownList")
            .BindTo((SelectList)ViewData["ServiceTechnicianList"])
            .Placeholder("-- Select --")
            .HtmlAttributes(new { style = "font-size: 8pt; font-family: Verdana; width:150px" })
            .DropDownHtmlAttributes(new { style = "font-size: 8pt; font-family: Verdana;" })
            .SelectedIndex(0)

            .Render();
            }
            <br />
            <label>
                Service Comments:</label>
            @Html.TextAreaFor(x => x.ServiceComments, new { id = "commentsText" })
            <br />
            @Html.TextBoxFor(x => x.UniqueId, new { @class = "singleTextBox", id = "uniqueText", @type = "hidden" })<br />
        </div>
        <div class="addLineRightcolumn" id="addLineRightcolumn">
            <div class="topDimensioncolumn">
                <h6>
                    Storage Dimension</h6>
                <label>
                    Item Number:</label>
                @{Html.Telerik().ComboBox().Name("itemNumberDropDownList")
            .BindTo((SelectList)ViewData["PartNumberList"])
            .Placeholder("-- Select --")
            .HtmlAttributes(new { style = "font-size: 8pt; font-family: Verdana; width:150px" })
            .DropDownHtmlAttributes(new { style = "font-size: 8pt; font-family: Verdana;" })
            .SelectedIndex(0)
               .ClientEvents(events => events.OnChange("onItemNumberSiteChange"))

            .Render();
                }
                <label>
                    Site:</label>
                @{Html.Telerik().ComboBox().Name("siteComboBox")
            .BindTo((SelectList)ViewData["siteList"])
            .Placeholder("-- Select --")
            .HtmlAttributes(new { style = "font-size: 8pt; font-family: Verdana; width:150px" })
            .DropDownHtmlAttributes(new { style = "font-size: 8pt; font-family: Verdana;" })
            .SelectedIndex(0)

            .Render();
                }
                @*@Html.DropDownListFor(x => x.Site.SiteID, new SelectList(""), "<--Select One-->", new { @class = "dropDownPropertiesSP", id = "LinePropertyDropDownList" })*@
                <label>
                    Warehouse:</label>
                @{Html.Telerik().ComboBox().Name("wareHouseDropDownList")
            .DataBinding(binding => binding.Ajax().Select("_GetDropDownWareHouse", "WorkOrder"))
            .Placeholder("-- Select --")
            .HtmlAttributes(new { style = "font-size: 8pt; font-family: Verdana; width:150px" })
            .DropDownHtmlAttributes(new { style = "font-size: 8pt; font-family: Verdana;" })
            .SelectedIndex(0)
            .ClientEvents(events => events.OnChange("onwareHouseChange"))
            .Render();
                }
                <label>
                    Location:</label>
                @{Html.Telerik().ComboBox().Name("locationDropDownList")
             .Placeholder("-- Select --")
            .HtmlAttributes(new { style = "font-size: 8pt; font-family: Verdana; width:150px" })
            .DropDownHtmlAttributes(new { style = "font-size: 8pt; font-family: Verdana;" })
            .SelectedIndex(0)
             .ClientEvents(events => events.OnChange("onlocationChange"))
            .Render();
                }
            </div>
            <div class="centerDimensioncolumn">
                <h6>
                    Tracking Dimension</h6>
                <label>
                    Serial Number:</label>
                @{Html.Telerik().ComboBox().Name("trackingSerialNoDropDownList")
             .Placeholder("-- Select --")
            .HtmlAttributes(new { style = "font-size: 8pt; font-family: Verdana; width:150px" })
            .DropDownHtmlAttributes(new { style = "font-size: 8pt; font-family: Verdana;" })
            .SelectedIndex(0)

            .Render();
                }
            </div>
            <div class="bottomDimensioncolumn">
                <h6>
                    Product Dimension</h6>
                <label>
                    Configuration:</label>
                @Html.DropDownListFor(x => x.ConfigType, new SelectList(""), "<--Select One-->", new { @class = "dropDownPropertiesSP", id = "LinePropertyDropDownList" })
                <label>
                    Size:</label>
                @Html.DropDownListFor(x => x.SizeType, new SelectList(""), "<--Select One-->", new { @class = "dropDownPropertiesSP", id = "LinePropertyDropDownList" })
                <br />
                <label>
                    Color:</label>
                @Html.DropDownListFor(x => x.ColorType, new SelectList(""), "<--Select One-->", new { @class = "dropDownPropertiesSP", id = "LinePropertyDropDownList" })
            </div>
        </div>
    </div>
    <div id="SubmitResult" class="submitResultServiceOrderProcess">
        <button class="t-button" type="button" id="Add" value="Add">
            Add</button>
        <button class="t-button" type="button" id="Update" value="Update">
            Update</button>
        <button class="t-button" type="button" id="Clear" value="Clear">
            Clear</button>
    </div>
    <div class="partLinesDiv" id="ServicepartLines">
        @{Html.RenderPartial("ServiceOrderPartLinesView");}
    </div>
    <div class="addressDiv">
        <h6>
            Address and Contact</h6>
        <div class="addLineleftcolumn">
            <label>
                Customer Name:</label>
            @Html.DisplayFor(x => x.Customer.CustomerName)<br />
            <label>
                Service Technician:</label>
            @Html.DisplayFor(x => x.ServiceTechnician.ServiceTechnicianName)<br />
            <label>
                Service Responsible:</label>
            @Html.DisplayFor(x => x.ServiceResponsible.ServiceTechnicianName)<br />
            <label>
                Customer PO:</label>
            @Html.DisplayFor(x => x.ServiceOrders.CustomerPO)<br />
        </div>
        <div class="centercolumn">
            <label>
                Billing Address:</label>
            @Html.DisplayFor(x => x.Address.AddresswithDesc)<br />
        </div>
        <div class="addLineRightcolumn">
            <label>
                Shipping Address:</label>
            @Html.DisplayFor(x => x.Address.AddresswithDesc)<br />
        </div>
    </div>
</div>
<script type="text/javascript">


    function onserialNumberDropDownChange(e) {

        if (e != null) {
            var serialNumber = e.currentTarget.value;
            jQuery.ajax({
                url: "/WorkOrder/GetServiceOrderLineBySerialNumberOrderProcess",
                type: 'GET',
                data: { serialNumber: serialNumber },
                success: function (result) {
                    jQuery('#partNumberView').html(result);
                },
                error: function (result) {
                    alert(result.responseText);
                }

            });


            return false;

        }
    }



    function ontransactionHide(e) {

        var transactionType = e.currentTarget.value;
        if (transactionType == "1") {
            $('#addLineRightcolumn').hide();
        }
        else if (transactionType == "2") {
            $('#addLineRightcolumn').hide();
        }
        else if (transactionType == "4") {
            $('#addLineRightcolumn').hide();
        }
        else if (transactionType == "3") {
            $('#addLineRightcolumn').show();
        }
    }


    jQuery('#Add').click(function () {

        var serviceOrderNo = $('#serviceOrderViewlabel').val();
        var transactionType = $('#transactionTypeDropDownList').val();
        var technicinanNo = $('#techniacianDropDownList').val();
        var quantity = $('#quantityText').val();
        var specialityCode = $('#specialtyCodeDropDownList').val();
        var failureCode = $('#failureCodeDropDownList').val();
        var lineProperty = $('#LinePropertyDropDownList').val();
        var description = $('#descriptionText').val();
        var serviceComments = $('#commentsText').val();
        var itemNumber = $('#itemNumberDropDownList').val();
        var site = $('#siteComboBox').val();
        var wareHouse = $('#wareHouseDropDownList').val();
        var locationId = $('#locationDropDownList').val();
        var transSerialCodeNo = $('#trackingSerialNoDropDownList').val();
        var serviceOrderRelation = $('#slNumberDropDownList').val();

        jQuery.ajax({
            url: "/WorkOrder/CreateServiceOrderPartLines",
            type: 'POST',

            data: { serviceOrderNo: serviceOrderNo, transactionType: transactionType, technicinanNo: technicinanNo, quantity: quantity, specialityCode: specialityCode, failureCode: failureCode, lineProperty: lineProperty, serviceOrderRelation: serviceOrderRelation, description: description, serviceComments: serviceComments, itemNumber: itemNumber, site: site, wareHouse: wareHouse, transSerialCodeNo: transSerialCodeNo, locationId: locationId },
            success: function (result) {
                jQuery('#ServicepartLines').html(result);

                alert('Service Order Part Lines Created Successfully');
                $('#transactionTypeDropDownList').data('tComboBox').value('--Select--');
                $('#quantityText').val('');
                $('#techniacianDropDownList').data('tComboBox').value('--Select--');
                $('#specialtyCodeDropDownList').data('tComboBox').value('--Select--');
                $('#failureCodeDropDownList').data('tComboBox').value('--Select--');
                $('#LinePropertyDropDownList').data('tComboBox').value('--Select--');
                $('#itemNumberDropDownList').data('tComboBox').value('--Select--');
                $('#wareHouseDropDownList').data('tComboBox').value('--Select--');
                $('#locationDropDownList').data('tComboBox').value('--Select--');
                $('#trackingSerialNoDropDownList').data('tComboBox').value('--Select--');
                $('#descriptionText').val('');
                $('#commentsText').val('');
            },
            error: function (result) {
                alert(result.responseText);
            }

        });
        return false;
    });

    jQuery('#Update').click(function () {

        var serviceOrderNo = $('#serviceOrderViewlabel').val();
        var transactionType = $('#transactionTypeDropDownList').val();
        var technicinanNo = $('#techniacianDropDownList').val();
        var quantity = $('#quantityText').val();
        var specialityCode = $('#specialtyCodeDropDownList').val();
        var failureCode = $('#failureCodeDropDownList').val();
        var lineProperty = $('#LinePropertyDropDownList').val();
        var description = $('#descriptionText').val();
        var serviceComments = $('#commentsText').val();
        var itemNumber = $('#itemNumberDropDownList').val();
        var site = $('#siteComboBox').val();
        var wareHouse = $('#wareHouseDropDownList').val();
        var locationId = $('#locationDropDownList').val();
        var transSerialCodeNo = $('#trackingSerialNoDropDownList').val();
        var serviceOrderRelation = $('#slNumberDropDownList').val();
        var uniqueId = $('#uniqueText').val();
        jQuery.ajax({
            url: "/WorkOrder/UpdateServiceOrderPartLines",
            type: 'POST',

            data: { uniqueId: uniqueId, serviceOrderNo: serviceOrderNo, transactionType: transactionType, technicinanNo: technicinanNo, quantity: quantity, specialityCode: specialityCode, failureCode: failureCode, lineProperty: lineProperty, serviceOrderRelation: serviceOrderRelation, description: description, serviceComments: serviceComments, itemNumber: itemNumber, site: site, wareHouse: wareHouse, transSerialCodeNo: transSerialCodeNo, locationId: locationId },
            success: function (result) {
                jQuery('#ServicepartLines').html(result);

                alert('Service Order Part Lines Updated Successfully');
                $('#transactionTypeDropDownList').data('tComboBox').value('--Select--');
                $('#quantityText').val('');
                $('#techniacianDropDownList').data('tComboBox').value('--Select--');
                $('#specialtyCodeDropDownList').data('tComboBox').value('--Select--');
                $('#failureCodeDropDownList').data('tComboBox').value('--Select--');
                $('#LinePropertyDropDownList').data('tComboBox').value('--Select--');
                $('#itemNumberDropDownList').data('tComboBox').value('--Select--');
                $('#wareHouseDropDownList').data('tComboBox').value('--Select--');
                $('#locationDropDownList').data('tComboBox').value('--Select--');
                $('#trackingSerialNoDropDownList').data('tComboBox').value('--Select--');
                $('#descriptionText').val('');
                $('#commentsText').val('');
            },
            error: function (result) {
                alert(result.responseText);
            }

        });
        return false;
    });


    jQuery('#Clear').click(function () {
        $('#transactionTypeDropDownList').data('tComboBox').value('--Select--');
        $('#quantityText').val('');
        $('#techniacianDropDownList').data('tComboBox').value('--Select--');
        $('#specialtyCodeDropDownList').data('tComboBox').value('--Select--');
        $('#failureCodeDropDownList').data('tComboBox').value('--Select--');
        $('#LinePropertyDropDownList').data('tComboBox').value('--Select--');
        $('#itemNumberDropDownList').data('tComboBox').value('--Select--');
        $('#wareHouseDropDownList').data('tComboBox').value('--Select--');
        $('#locationDropDownList').data('tComboBox').value('--Select--');
        $('#trackingSerialNoDropDownList').data('tComboBox').value('--Select--');
        $('#descriptionText').val('');
        $('#commentsText').val('');

    });

    function onItemNumberSiteChange(e) {


        var SelectedSiteId = $('#siteComboBox').val();
        var SelectedItemNumber = $('#itemNumberDropDownList').val();
        var getwareHouse = $('#wareHouseDropDownList').data('tComboBox');
        getwareHouse.loader.showBusy();

        jQuery.ajax({
            url: "/WorkOrder/_GetDropDownWareHouse",
            type: 'GET',
            data: { partNumberDropDownList: SelectedItemNumber, siteComboBox: SelectedSiteId },
            success: function (result) {
                getwareHouse.dataBind(result);
                getwareHouse.loader.hideBusy();


            }


        });


        return false;

    }

    function onwareHouseChange(e) {

        var SelectedSiteId = $('#siteComboBox').val();
        var SelectedItemNumber = $('#itemNumberDropDownList').val();
        var SelectedwarehouseId = $('#wareHouseDropDownList').val();
        var getLocation = $('#locationDropDownList').data('tComboBox');
        getLocation.loader.showBusy();
        jQuery.ajax({
            url: "/WorkOrder/_GetLocationList",
            type: 'GET',
            data: { partNumberDropDownList: SelectedItemNumber, siteComboBox: SelectedSiteId, wareHouseDropDownList: SelectedwarehouseId },
            success: function (result) {

                getLocation.dataBind(result);
                getLocation.loader.hideBusy();
            }


        });


        return false;

    }

    function onlocationChange(e) {


        var SelectedSiteId = $('#siteComboBox').val();
        var SelectedItemNumber = $('#itemNumberDropDownList').val();
        var SelectedwarehouseId = $('#wareHouseDropDownList').val();
        var SelectedlocationId = $('#locationDropDownList').val();
        var gettrackingSerialNo = $('#trackingSerialNoDropDownList').data('tComboBox');
        gettrackingSerialNo.loader.showBusy();
        jQuery.ajax({
            url: "/WorkOrder/_GetTransactionSerialNumberList",
            type: 'GET',
            data: { partNumberDropDownList: SelectedItemNumber, siteComboBox: SelectedSiteId, wareHouseDropDownList: SelectedwarehouseId, locationDropDownList: SelectedlocationId },
            success: function (result) {

                gettrackingSerialNo.dataBind(result);
                gettrackingSerialNo.loader.hideBusy();
            }


        });


        return false;

    }   


</script>
