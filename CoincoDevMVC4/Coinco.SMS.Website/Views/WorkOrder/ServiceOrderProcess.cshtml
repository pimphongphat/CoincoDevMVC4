@model Coinco.SMS.Website.Models.SerivceOrderPartLine
@using Telerik.Web.Mvc.UI
@using Telerik.Web.Mvc
@{
    ViewBag.Title = "Order Process";
}
<style type="text/css">
    div
    {
        font-weight: normal;
        font-style: normal;
        font-size: 1.02em;
    }
    .ui-widget
    {
        font-family: inherit;
        font-size: inherit;
    }
    
 


</style>
<div class="pageCointainer">
<br />
<div class="serviceProcessDiv">
       
    
    <div class="leftcolumn">
      @Html.Label("Service Order:", new { @class = "labelHeaderView", id = "serviceOrderLabel" })
      <div class="labelViewSO">
        @Html.DisplayFor(x => TempData["ServiceOrderId"], new { @class = "labelViewSO", id = "serviceOrderViewlabel" })
    </div>
        <br />
        @Html.Label("SO Relation:", new { @class = "labelHeaderView", id = "sOLabel" })
        @Html.DropDownListFor(x => x.ServiceObjectRelation, (SelectList)ViewData["SORelationList"], "<--Select One-->", new { @class = "dropDownPropertiesSP", id = "SORelationDropDownList" })
        <br />
    </div>

    <div class="centercolumn">
        @Html.Label("Warranty:", new { @class = "labelHeaderView", id = "warrantyHeadLabel" })
        <div class="labelViewSO">   
        @Html.DisplayFor(x => x.ServiceOrderLine.Warranty, new { @class = "labelViewSO", id = "serviceOrderViewlabel" })
        </div>
        <br />
        @Html.Label("Serial Number:", new { @class = "labelHeaderView", id = "serailNoHeadLabel" })
        <div class="labelViewSO">    
        @Html.DisplayFor(x => x.SerialNumber, (SelectList)ViewData["SerialNumberList"])
        </div>
        <br />
    </div>

    <div class="rightcolumn">
        @Html.Label("Repair Type:", new { @class = "labelHeaderView", id = "repairHeadLabel" })
        <div class="labelViewSO">
        @Html.DisplayFor(x => x.ServiceOrderLine.RepairType)
        </div>
        <br />
        @Html.Label("Part Number:", new { @class = "labelHeaderView", id = "partNoHeadLabel" })
        <div class="labelViewSO">
        @Html.DisplayFor(x => x.ServiceOrderLine.PartNumber)<br />
        </div>
    </div>

</div>

<div class="addLinesDiv">
 <div class="addLineleftcolumn">
 <h6>Add Lines</h6>

  <label>
            Transaction Type:</label>
           
           @Html.DropDownListFor(x => x.TransactionType, new SelectList(Enum.GetValues(typeof(Coinco.SMS.Website.Models.TransactionType))), new { @class = "dropDownPropertiesSP", id = "transactionTypeDropDownList" })
        <br />
        <label>
           Description:</label>
           @Html.TextAreaFor(x => x.Description)<br />

     <label>
            Failure Code:</label>
            @Html.DropDownListFor(x => x.FailureCode.FailureCodeNo, (SelectList)ViewData["FailureCodeList"], "<--Select One-->", new { @class = "dropDownPropertiesSP", id = "failureCodeDropDownList" })
        <br />
    <label>
            Specialty Code:</label>
          @Html.DropDownListFor(x => x.LineProperty.LinePropertyCode, (SelectList)ViewData["LinePropertyList"], "<--Select One-->", new { @class = "dropDownPropertiesSP", id = "LinePropertyDropDownList" })
          
        <label>
            Line Property:</label>
           @Html.DropDownListFor(x => x.LineProperty.LinePropertyCode, (SelectList)ViewData["LinePropertyList"], "<--Select One-->", new { @class = "dropDownPropertiesSP", id = "LinePropertyDropDownList" })
        <br />
        
 </div>
 <div class="addLinecentercolumn">
 <label>
            Quantity:</label>
            @Html.TextBoxFor(x => x.Quantity, new { @class = "singleTextBox" })<br />
 <label>
            Technician:</label>
       @Html.DropDownListFor(x => x.LineProperty.LinePropertyCode, (SelectList)ViewData["LinePropertyList"], "<--Select One-->", new { @class = "dropDownPropertiesSP", id = "LinePropertyDropDownList" })
        <br />
         <label>
           Service Comments:</label>
           @Html.TextAreaFor(x => x.ServiceComments)<br />
 </div>
 <div class="addLineRightcolumn">
 <div class="topDimensioncolumn">
  <h6>Storage Dimension</h6>
   <label>
            Item Number:</label>
            @Html.DropDownList("partNumberDropDownList", (SelectList)ViewData["PartNumberList"], "<--Select One-->", new { @class = "dropDownPropertiesSP" })
       
         <label>
            Site:</label>
    @Html.DropDownListFor(x => x.LineProperty.LinePropertyCode, (SelectList)ViewData["LinePropertyList"], "<--Select One-->", new { @class = "dropDownPropertiesSP", id = "LinePropertyDropDownList" })
      
         <label>
            Warehouse:</label>
    @Html.DropDownListFor(x => x.LineProperty.LinePropertyCode, (SelectList)ViewData["LinePropertyList"], "<--Select One-->", new { @class = "dropDownPropertiesSP", id = "LinePropertyDropDownList" })
         <label>
            Location:</label>
           @Html.DropDownListFor(x => x.LineProperty.LinePropertyCode, (SelectList)ViewData["LinePropertyList"], "<--Select One-->", new { @class = "dropDownPropertiesSP", id = "LinePropertyDropDownList" })
 </div> 
 <div class="centerDimensioncolumn"> 
    <h6>Tracking Dimension</h6>
    <label> Serial Number:</label>
      @Html.DropDownListFor(x => x.LineProperty.LinePropertyCode, (SelectList)ViewData["LinePropertyList"], "<--Select One-->", new { @class = "dropDownPropertiesSP", id = "LinePropertyDropDownList" })
  </div>  
  <div class="bottomDimensioncolumn" >
     <h6>Product Dimension</h6>
        <label> Configuration:</label>
     @Html.DropDownListFor(x => x.LineProperty.LinePropertyCode, (SelectList)ViewData["LinePropertyList"], "<--Select One-->", new { @class = "dropDownPropertiesSP", id = "LinePropertyDropDownList" })
       
         <label> Size:</label>
       @Html.DropDownListFor(x => x.LineProperty.LinePropertyCode, (SelectList)ViewData["LinePropertyList"], "<--Select One-->", new { @class = "dropDownPropertiesSP", id = "LinePropertyDropDownList" })
        <br />
         <label> Color:</label>
        @Html.DropDownListFor(x => x.LineProperty.LinePropertyCode, (SelectList)ViewData["LinePropertyList"], "<--Select One-->", new { @class = "dropDownPropertiesSP", id = "LinePropertyDropDownList" })
   </div>     
 </div>

</div>

 <div id="SubmitResult" class="submitResultClass"> 
                     <button class="t-button" type="button" id="Add" value="Add">Add</button>
                      
                    <button class="t-button" type="button" id="Clear" value="Clear">Clear</button>


  </div>
   
   

<div class="partLinesDiv">
@{Html.Telerik().Grid((IEnumerable<Coinco.SMS.Website.Models.SerivceOrderPartLine>)ViewData["ServiceOrderPartLines"])
        .Name("PartLinesGrid")
        .Columns(columns =>
        {
            columns.Bound(c => c.TransactionSerialNumber).Title("SerialNumber").Width(120);
            columns.Bound(c => c.ServiceObjectRelation).Title("SO Relation").Width(100);
            columns.Bound(c => c.TransactionType).Width(120);
            columns.Bound(c => c.Description).Width(100);
            columns.Bound(c => c.SpecialtyCode.SpecialityCodeNo).Title("SpecialtyCode").Width(120);
            columns.Bound(c => c.FailureCode.FailureCodeNo).Title("FailureCode").Width(100);
            columns.Bound(c => c.LineProperty.LinePropertyCode).Title("LineProperty").Width(100);
            columns.Bound(c => c.Quantity).Width(100);
            columns.Bound(c => c.ServiceTechnician.ServiceTechnicianName).Title("Technician").Width(100);
            columns.Bound(c => c.ServiceComments).Title("Comments").Width(100);
            columns.Bound(c => c.PartDetails.ItemNumber).Title("ItemNumber").Width(100);
            columns.Bound(c => c.Site.SiteID).Title("Site").Width(50); 
            columns.Bound(c => c.WareHouse.WareHouseCode).Title("WareHouse").Width(100);
            columns.Bound(c => c.Location.LocationId).Title("Location").Width(100);
            
        })

        .DataBinding(dataBinding =>
        {
            dataBinding.Ajax().OperationMode(GridOperationMode.Client).Select("_SelectionClientSide_serviceOrderPartLines", "WorkOrder")
                .Enabled(true);
        }
      )
        .HtmlAttributes(new { style = "font-size: 8pt; font-family: Verdana; width:950px" })
        .Scrollable()
        .Pageable((pager => pager.PageSize(5)))
        .Sortable()
        .Selectable()
        .Filterable()
        .Render();

            //.ClientEvents(clientEvents => clientEvents.OnDataBinding("onServiceGridDataBinding"))
            //.ClientEvents(events => events.OnRowSelect("onRowSelected"))

       
    
        }
  </div> 
  <div class="addressDiv">
  <h6>Address and Contact</h6>
   <div class="addLineleftcolumn">
   <label>
        Customer Name:</label>
        @Html.DisplayFor(x => x.Customer.CustomerName)<br />
  <label>
        Service Technician:</label>
        @Html.DisplayFor(x => x.ServiceTechnician.ServiceTechnicianName)<br />
    <label>
        Service Responsible:</label>
        @Html.DisplayFor(x => x.ServiceResponsible.ServiceTechnicianName)<br />
    <label>
        Customer PO:</label>
        @Html.DisplayFor(x => x.ServiceOrders.CustomerPO)<br />
   </div>
    <div class="centercolumn">
     <label>
        Billing Address:</label>
        @Html.DisplayFor(x => x.Address.AddresswithDesc)<br />
  </div>
  <div class="addLineRightcolumn">
     <label>
        Shipping Address:</label>
        @Html.DisplayFor(x => x.Address.AddresswithDesc)<br />
  </div>

</div>
</div>
    
    
    
         
      